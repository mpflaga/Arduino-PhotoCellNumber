/*
  Arduino-PhotoCellNumber - Array of Photo cells creating a number

  This example reads the number generated by an array of LDRs
  or Light Decreasing Resistors, aka photocells and continuously
  prints them to the Serial Monitor. Where each LDR is a bit in 
  the number outputed.
  
  The circuit:
  - Arduino Uno/Mega
  - 3 LDR's.

  created 20 Aug 2021
  by Michael P. Flaga

  This example code is in the public domain.
*/

#include "PhotoCellNumber.h"

// initial values for array of LDR's
Pins ldrPins[] = {
  // {Signal Pin, GND Pin, Threshold}
  // Note - GND = 0 assumes LDR is connected to real ground.
  {A0, A1, 700}, 
  {A2, A3, 700},
  {A4, A5, 700}
};

// instanciate Driver to monitor array of photocells
PhotoCellNumber PhotoCellNumber(ldrPins, sizeof(ldrPins) / sizeof(ldrPins[0]), 10);
int value_prv = 0; // value to monitor change in photo cells composite number

void setup()
{
  Serial.begin(115200);
  Serial.print(F("Running - ")); Serial.println(F(__FILE__));
  Serial.print(F("Build Date: ")); Serial.print(F(__DATE__)); Serial.print(F(" ")); Serial.println(F(__TIME__));

  PhotoCellNumber.setInterval(50, 500); // set sample period and threshold for all bits.`
  PhotoCellNumber.ldr[0]->setThreshold(501); // set threshold for individual bits.
  PhotoCellNumber.ldr[1]->setThreshold(502);
  PhotoCellNumber.ldr[2]->setThreshold(503);

  PhotoCellNumber.setInvert(true); // invert all bits. default is false.
  // PhotoCellNumber.ldr[0]->setInvert(true); // invert individual bits.
  // PhotoCellNumber.ldr[1]->setInvert(true);
  // PhotoCellNumber.ldr[2]->setInvert(true);

  for (int i = 0; i < sizeof(ldrPins) / sizeof(ldrPins[0]); i++)
  {
    Serial.print("PhotoCellNumber.ldr["); Serial.print(i); Serial.print("] = ");
    PhotoCellNumber.ldr[i]->PrintPins();
  }
  Serial.println();
  PhotoCellNumber.printArray();

  Serial.print("initial value = "); Serial.println(PhotoCellNumber.value);
  value_prv = PhotoCellNumber.value;
  #define PRINT_TIME_STAMPS 0 // 1 = ON, 0 = OFF
  #define PRINT_VALUES 0
  PhotoCellNumber.setDebugMask( PRINT_TIME_STAMPS<<1 | PRINT_VALUES<<0 );
}

void loop()
{
  PhotoCellNumber.update();
  if (PhotoCellNumber.value != value_prv) {
    Serial.print("New value = "); Serial.println(PhotoCellNumber.value);
    value_prv = PhotoCellNumber.value;
  }
  delay(1);
}
